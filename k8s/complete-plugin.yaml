# Complete Paygress Ingress Plugin with all features
apiVersion: v1
kind: ServiceAccount
metadata:
  name: paygress-complete
  namespace: ingress-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: paygress-complete
rules:
# Pod management permissions
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["get"]
# Service management  
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get", "list", "watch", "delete"]
# Namespace access
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
# Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: paygress-complete
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: paygress-complete
subjects:
- kind: ServiceAccount
  name: paygress-complete
  namespace: ingress-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: paygress-config
  namespace: ingress-system
data:
  PAYGRESS_MODE: "complete"
  BIND_ADDR: "0.0.0.0:8080"
  CASHU_DB_PATH: "/app/data/cashu.db"
  ENABLE_POD_PROVISIONING: "true"
  ENABLE_NOSTR_EVENTS: "false"  # Set to "true" if you want Nostr events
  DEFAULT_POD_IMAGE: "nginx:alpine"
  POD_NAMESPACE: "user-workloads"
  RUST_LOG: "info"
---
apiVersion: v1
kind: Secret
metadata:
  name: paygress-secrets
  namespace: ingress-system
type: Opaque
data:
  # Base64 encoded Nostr secret key (optional)
  # echo -n "your_nostr_secret_key" | base64
  NOSTR_SECRET_KEY: ""  # Add your base64 encoded key here
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paygress-complete
  namespace: ingress-system
  labels:
    app: paygress-complete
    component: ingress-plugin
spec:
  replicas: 2
  selector:
    matchLabels:
      app: paygress-complete
  template:
    metadata:
      labels:
        app: paygress-complete
        component: ingress-plugin
    spec:
      serviceAccountName: paygress-complete
      containers:
      - name: paygress
        image: paygress:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: paygress-config
        - secretRef:
            name: paygress-secrets
        volumeMounts:
        - name: data
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        emptyDir: {}
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: paygress-complete
  namespace: ingress-system
  labels:
    app: paygress-complete
spec:
  selector:
    app: paygress-complete
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
# Example NGINX Ingress using the complete plugin
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-protected-service
  namespace: default
  annotations:
    # Use complete Paygress plugin
    nginx.ingress.kubernetes.io/auth-url: "http://paygress-complete.ingress-system.svc.cluster.local:8080/auth"
    nginx.ingress.kubernetes.io/auth-method: "GET"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Payment-Verified,X-Payment-Amount,X-Provisioned-Pod,X-Nostr-Event"
    
    # Custom error pages
    nginx.ingress.kubernetes.io/custom-http-errors: "401,402"
spec:
  ingressClassName: nginx
  rules:
  - host: api.example.com
    http:
      paths:
      - path: /premium
        pathType: Prefix
        backend:
          service:
            name: premium-service
            port:
              number: 80
---
# User workloads namespace for provisioned pods
apiVersion: v1
kind: Namespace
metadata:
  name: user-workloads
  labels:
    managed-by: paygress
