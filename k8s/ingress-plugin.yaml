# Paygress Ingress Plugin - Complete Kubernetes Setup
apiVersion: v1
kind: Namespace
metadata:
  name: paygress-system
  labels:
    name: paygress-system
---
# ConfigMap for plugin configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: paygress-config
  namespace: paygress-system
data:
  PAYGRESS_MODE: "complete"
  ENABLE_POD_PROVISIONING: "true"
  ENABLE_NOSTR_EVENTS: "false"
  DEFAULT_POD_IMAGE: "nginx:alpine"
  POD_NAMESPACE: "default"
  CASHU_DB_PATH: "/data/cashu.db"
  NOSTR_RELAYS: "wss://relay.damus.io,wss://nos.lol"
  RUST_LOG: "info"
---
# ServiceAccount for pod provisioning
apiVersion: v1
kind: ServiceAccount
metadata:
  name: paygress-plugin
  namespace: paygress-system
---
# ClusterRole for pod management
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: paygress-pod-manager
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get", "list", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "get", "list", "delete"]
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: paygress-plugin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: paygress-pod-manager
subjects:
- kind: ServiceAccount
  name: paygress-plugin
  namespace: paygress-system
---
# PersistentVolume for Cashu database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paygress-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/paygress-data
  storageClassName: local-storage
---
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paygress-data-pvc
  namespace: paygress-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paygress-plugin
  namespace: paygress-system
  labels:
    app: paygress-plugin
spec:
  replicas: 2
  selector:
    matchLabels:
      app: paygress-plugin
  template:
    metadata:
      labels:
        app: paygress-plugin
    spec:
      serviceAccountName: paygress-plugin
      containers:
      - name: paygress
        image: paygress:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: paygress-config
        volumeMounts:
        - name: data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: paygress-data-pvc
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: paygress-plugin
  namespace: paygress-system
  labels:
    app: paygress-plugin
spec:
  selector:
    app: paygress-plugin
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
# NGINX Ingress with external auth
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paygress-example
  namespace: default
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/auth-url: "http://paygress-plugin.paygress-system.svc.cluster.local:8080/auth"
    nginx.ingress.kubernetes.io/auth-method: "GET"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Payment-Verified,X-Payment-Amount,X-Provisioned-Pod,X-Auth-Reason"
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
      proxy_set_header X-Forwarded-Method $request_method;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
spec:
  ingressClassName: nginx
  rules:
  - host: api.example.com
    http:
      paths:
      - path: /premium
        pathType: Prefix
        backend:
          service:
            name: your-backend-service
            port:
              number: 80
      - path: /paid-service
        pathType: Prefix
        backend:
          service:
            name: your-backend-service
            port:
              number: 80
---
# Example backend service (replace with your actual service)
apiVersion: v1
kind: Service
metadata:
  name: your-backend-service
  namespace: default
spec:
  selector:
    app: your-backend
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: your-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: your-backend
  template:
    metadata:
      labels:
        app: your-backend
    spec:
      containers:
      - name: backend
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: content
        configMap:
          name: backend-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-content
  namespace: default
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Protected Service</title>
    </head>
    <body>
        <h1>ðŸŽ‰ Payment Verified!</h1>
        <p>You successfully paid with Cashu and accessed this premium service.</p>
        <p>Your service has been provisioned automatically.</p>
    </body>
    </html>
