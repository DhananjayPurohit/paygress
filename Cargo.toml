[package]
name = "paygress"
version = "0.1.0"
edition = "2021"
authors = ["Paygress Team <team@paygress.io>"]
description = "Cashu payment verification and pod provisioning for ingress controllers"
license = "MIT"

# Build multiple plugin targets
[[bin]]
name = "paygress-service"
path = "src/main.rs"
required-features = ["service"]

[[bin]]
name = "nginx-plugin"
path = "src/bin/nginx_plugin.rs"
required-features = ["nginx"]

[[bin]] 
name = "traefik-plugin"
path = "src/bin/traefik_plugin.rs"
required-features = ["traefik"]

[[bin]]
name = "envoy-plugin" 
path = "src/bin/envoy_plugin.rs"
required-features = ["envoy"]

# Library for embedding
[lib]
name = "paygress"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[features]
default = ["service"]

# Core service (your current external service setup)
service = ["axum", "tracing-subscriber"]

# NGINX plugin feature
nginx-plugin = ["libc"]

# Direct NGINX module (no Lua)
nginx-direct = ["libc"]

[dependencies]
# Core dependencies (shared across all plugins and service)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.143"
tokio = { version = "1.0", features = ["full"] }
log = "0.4"
rand = "0.8"

# Existing paygress dependencies
cdk-redb = "0.9.1"
cdk = "0.9.0"
kube = { version = "0.93", features = ["runtime", "derive"] }
k8s-openapi = { version = "0.22", features = ["v1_28"] }
uuid = { version = "1.0", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }

# Service dependencies (for external service mode)
nostr-sdk = "0.33"
tracing = "0.1"
tracing-subscriber = { version = "0.3", optional = true }
anyhow = "1.0"
axum = { version = "0.7", optional = true }

# NGINX plugin dependencies
libc = { version = "0.2", optional = true }

# Traefik plugin dependencies (WebAssembly)
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true }
url = { version = "2.4", optional = true }

# Envoy plugin dependencies (Proxy-WASM)
proxy-wasm = { version = "0.2", optional = true }

# WASM-specific dependencies
serde-wasm-bindgen = { version = "0.6", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
console_error_panic_hook = "0.1"

[profile.release]
# Optimize for small binary size (important for plugins)
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"
