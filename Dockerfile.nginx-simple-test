# NGINX Ingress Controller with Embedded Paygress Plugin - Simple Test Version
FROM rust:1.85 AS builder

WORKDIR /app
COPY Cargo.toml .
COPY src/ src/

# Build just a minimal test version first
RUN cargo build --release --features nginx --lib

# Use a glibc-based image instead of Alpine
FROM debian:bullseye-slim

# Install NGINX and Lua
RUN apt-get update && apt-get install -y \
    nginx \
    lua5.1 \
    liblua5.1-dev \
    nginx-module-lua \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled plugin library
COPY --from=builder /app/target/release/libpaygress.so /etc/nginx/modules/paygress.so
RUN chmod 644 /etc/nginx/modules/paygress.so

# Simple NGINX config for testing
RUN echo 'load_module /usr/lib/nginx/modules/ndk_http_module.so;' > /etc/nginx/nginx.conf && \
    echo 'load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;' >> /etc/nginx/nginx.conf && \
    echo 'events { worker_connections 1024; }' >> /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  server {' >> /etc/nginx/nginx.conf && \
    echo '    listen 80;' >> /etc/nginx/nginx.conf && \
    echo '    location /test {' >> /etc/nginx/nginx.conf && \
    echo '      content_by_lua_block {' >> /etc/nginx/nginx.conf && \
    echo '        local ffi = require("ffi")' >> /etc/nginx/nginx.conf && \
    echo '        ffi.cdef[[ const char* paygress_version(); ]]' >> /etc/nginx/nginx.conf && \
    echo '        local paygress = ffi.load("/etc/nginx/modules/paygress.so")' >> /etc/nginx/nginx.conf && \
    echo '        local version = ffi.string(paygress.paygress_version())' >> /etc/nginx/nginx.conf && \
    echo '        ngx.say("Paygress version: " .. version)' >> /etc/nginx/nginx.conf && \
    echo '      }' >> /etc/nginx/nginx.conf && \
    echo '    }' >> /etc/nginx/nginx.conf && \
    echo '  }' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
